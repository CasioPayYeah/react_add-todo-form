{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","App","useState","newTodos","setTodos","todoTitle","setTodoTitle","userID","setUserID","titleError","setTitleError","userIDError","setUserIDError","todoFormHandler","event","preventDefault","newTodo","Math","max","prev","onSubmit","e","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf486ebb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../Types/Types';\n\ntype Props = {\n  user: User\n};\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../Types/Types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user !== null && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../Types/Types';\n\ntype Props = {\n  todos: Todo[],\n};\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo, User } from './components/Types/Types';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [newTodos, setTodos] = useState<Todo[]>(todos);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [userID, setUserID] = useState(0);\n  const [titleError, setTitleError] = useState('');\n  const [userIDError, setUserIDError] = useState('');\n\n  function getId() {\n    const max = Math.max(...newTodos.map(todo => todo.id));\n\n    return max + 1;\n  }\n\n  function resetForm() {\n    setTodoTitle('');\n    setUserID(0);\n    setTitleError('');\n    setUserIDError('');\n  }\n\n  const todoFormHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!userID) {\n      setUserIDError('Username is required');\n    }\n\n    if (!todoTitle) {\n      setTitleError('Title is required');\n    }\n\n    if (!userID || !todoTitle) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: getId(),\n      title: todoTitle,\n      completed: false,\n      userId: userID,\n      user: getUserById(userID),\n    };\n\n    setTodos(prev => [...prev, newTodo]);\n\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={e => todoFormHandler(e)}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"titleInput\"\n            placeholder=\"Type todo title\"\n            value={todoTitle}\n            onChange={e => {\n              setTodoTitle(e.target.value);\n              setTitleError('');\n            }}\n          />\n          {titleError\n            && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            value={userID}\n            onChange={e => {\n              setUserID(+e.target.value);\n              setUserIDError('');\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userIDError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}